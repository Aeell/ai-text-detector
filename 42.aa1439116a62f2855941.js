"use strict";(this.webpackChunkAITextDetector=this.webpackChunkAITextDetector||[]).push([[42],{42:(__unused_webpack_module,exports)=>{eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.UIController = void 0;\n// ui-controller.js - UI interactions and DOM manipulation for AI Text Detector\n\n/**\n * Current language code\n * @type {string}\n */\nlet currentLang = "ENG";\n\n/**\n * Translations for all supported languages\n * @type {Object}\n */\nconst translations = {\n  CZE: {\n    title: "Detektor AI √ökol≈Ø",\n    subtitle: "Pro uƒçitele, rodiƒçe a ƒçestn√© studenty",\n    banner: "Chy≈•te podvodn√≠ky s AI bƒõhem nƒõkolika sekund!",\n    prompt: "Vlo≈æte text studenta k odhalen√≠ AI generovan√©ho obsahu.",\n    placeholder: "Vlo≈æte text zde (nap≈ô. dom√°c√≠ √∫koly, eseje)...",\n    comparePlaceholder: "Vlo≈æte druh√Ω text pro porovn√°n√≠...",\n    analyze: "Analyzovat text",\n    compare: "Porovnat texty",\n    export: "Exportovat v√Ωsledky",\n    share: "Sd√≠let: ùïè",\n    clear: "Vyƒçistit",\n    tipsTitle: "Tipy pro uƒçitele",\n    tipsText: "<ul><li><strong>Jednotn√© vƒõty:</strong> Text AI m√° ƒçasto konzistentn√≠ d√©lku vƒõt.</li><li><strong>Vyle≈°tƒõn√© fr√°ze:</strong> Hledejte p≈ô√≠li≈° √∫hlednou pr√≥zu bez chyb.</li><li><strong>P≈ôepjat√© p≈ôechody:</strong> V≈°√≠majte si fr√°z√≠ jako \'z√°vƒõrem\'.</li></ul>",\n    footer: "Vytvo≈ôeno pro podporu ƒçestn√© pr√°ce | <a href=\'mailto:your-email@example.com\'>Kontaktujte n√°s</a>",\n    noText: "Zadejte text k anal√Ωze.",\n    aiLabel: "Pravdƒõpodobnost AI:",\n    likelyAI: "Pravdƒõpodobnƒõ generov√°no AI",\n    likelyHuman: "Pravdƒõpodobnƒõ naps√°no ƒçlovƒõkem",\n    compareResult: "Porovn√°n√≠: Text 1 - {score1}%, Text 2 - {score2}%",\n    wordCount: "Poƒçet slov: {count}",\n    repeatWords: "Opakuj√≠c√≠ se slova: {list}",\n    sentenceCount: "Poƒçet vƒõt: {count}",\n    readability: "ƒåitelnost (Flesch): {score}",\n    darkMode: "Tmav√Ω re≈æim",\n    lightMode: "Svƒõtl√Ω re≈æim"\n  },\n  ENG: {\n    title: "AI Homework Detector",\n    subtitle: "For Teachers, Parents, and Honest Students",\n    banner: "Catch AI Cheaters in Seconds!",\n    prompt: "Paste student text to detect AI-generated homework.",\n    placeholder: "Paste text here (e.g., homework, essays)...",\n    comparePlaceholder: "Paste second text to compare...",\n    analyze: "Analyze Text",\n    compare: "Compare Texts",\n    export: "Export Results",\n    share: "Share: ùïè",\n    clear: "Clear",\n    tipsTitle: "Tips for Teachers",\n    tipsText: "<ul><li><strong>Uniform Sentences:</strong> AI text often has consistent sentence lengths.</li><li><strong>Polished Phrasing:</strong> Look for overly neat prose without errors.</li><li><strong>Overused Transitions:</strong> Spot phrases like \'in conclusion\'.</li></ul>",\n    footer: "Built to promote honest work | <a href=\'mailto:your-email@example.com\'>Contact Us</a>",\n    noText: "Please enter some text to analyze.",\n    aiLabel: "AI Likelihood:",\n    likelyAI: "Likely AI-generated",\n    likelyHuman: "Likely human-written",\n    compareResult: "Comparison: Text 1 - {score1}%, Text 2 - {score2}%",\n    wordCount: "Word Count: {count}",\n    repeatWords: "Repeating Words: {list}",\n    sentenceCount: "Sentence Count: {count}",\n    readability: "Readability (Flesch): {score}",\n    darkMode: "Dark Mode",\n    lightMode: "Light Mode"\n  },\n  DE: {\n    title: "KI-Hausaufgabendetektor",\n    subtitle: "F√ºr Lehrer, Eltern und ehrliche Sch√ºler",\n    banner: "Fange KI-Betr√ºger in Sekunden!",\n    prompt: "F√ºge den Sch√ºlertext ein, um KI-generierte Hausaufgaben zu erkennen.",\n    placeholder: "Text hier einf√ºgen (z.B. Hausaufgaben, Aufs√§tze)...",\n    comparePlaceholder: "Zweiten Text zum Vergleichen einf√ºgen...",\n    analyze: "Text analysieren",\n    compare: "Texte vergleichen",\n    export: "Ergebnisse exportieren",\n    share: "Teilen: ùïè",\n    clear: "L√∂schen",\n    tipsTitle: "Tipps f√ºr Lehrer",\n    tipsText: "<ul><li><strong>Einheitliche S√§tze:</strong> KI-Texte haben oft konsistente Satzlangen.</li><li><strong>Geschliffene Formulierungen:</strong> Achte auf zu perfekte Prosa.</li><li><strong>√úberm√§√üig genutzte √úberg√§nge:</strong> Suche nach Phrasen wie \'zum Schluss\'.</li></ul>",\n    footer: "Entwickelt zur F√∂rderung ehrlicher Arbeit | <a href=\'mailto:your-email@example.com\'>Kontaktieren Sie uns</a>",\n    noText: "Bitte geben Sie einen Text zur Analyse ein.",\n    aiLabel: "KI-Wahrscheinlichkeit:",\n    likelyAI: "Wahrscheinlich KI-generiert",\n    likelyHuman: "Wahrscheinlich menschlich geschrieben",\n    compareResult: "Vergleich: Text 1 - {score1}%, Text 2 - {score2}%",\n    wordCount: "Wortanzahl: {count}",\n    repeatWords: "Wiederholte W√∂rter: {list}",\n    sentenceCount: "Satzanzahl: {count}",\n    readability: "Lesbarkeit (Flesch): {score}",\n    darkMode: "Dunkelmodus",\n    lightMode: "Hellmodus"\n  },\n  FR: {\n    title: "D√©tecteur de Devoirs IA",\n    subtitle: "Pour les enseignants, les parents et les √©l√®ves honn√™tes",\n    banner: "Attrapez les tricheurs IA en quelques secondes !",\n    prompt: "Collez le texte de l\'√©l√®ve pour d√©tecter les devoirs g√©n√©r√©s par IA.",\n    placeholder: "Collez le texte ici (ex. devoirs, essais)...",\n    comparePlaceholder: "Collez un second texte √† comparer...",\n    analyze: "Analyser le texte",\n    compare: "Comparer les textes",\n    export: "Exporter les r√©sultats",\n    share: "Partager: ùïè",\n    clear: "Effacer",\n    tipsTitle: "Conseils pour les enseignants",\n    tipsText: "<ul><li><strong>Phrases uniformes :</strong> Les textes IA ont souvent des longueurs de phrases constantes.</li><li><strong>Formulations soign√©es :</strong> Recherchez une prose trop parfaite.</li><li><strong>Transitions surutilis√©es :</strong> Rep√©rez des expressions comme \'en conclusion\'.</li></ul>",\n    footer: "Con√ßu pour promouvoir un travail honn√™te | <a href=\'mailto:your-email@example.com\'>Contactez-nous</a>",\n    noText: "Veuillez entrer un texte √† analyser.",\n    aiLabel: "Probabilit√© IA :",\n    likelyAI: "Probablement g√©n√©r√© par IA",\n    likelyHuman: "Probablement √©crit par un humain",\n    compareResult: "Comparaison : Texte 1 - {score1}%, Texte 2 - {score2}%",\n    wordCount: "Nombre de mots: {count}",\n    repeatWords: "Mots r√©p√©t√©s: {list}",\n    sentenceCount: "Nombre de phrases: {count}",\n    readability: "Lisibilit√© (Flesch): {score}",\n    darkMode: "Mode sombre",\n    lightMode: "Mode clair"\n  },\n  ES: {\n    title: "Detector de Tareas IA",\n    subtitle: "Para maestros, padres y estudiantes honestos",\n    banner: "¬°Atrapa a los tramposos con IA en segundos!",\n    prompt: "Pega el texto del estudiante para detectar tareas generadas por IA.",\n    placeholder: "Pega el texto aqu√≠ (ej. tareas, ensayos)...",\n    comparePlaceholder: "Pega un segundo texto para comparar...",\n    analyze: "Analizar texto",\n    compare: "Comparar textos",\n    export: "Exportar resultados",\n    share: "Compartir: ùïè",\n    clear: "Limpiar",\n    tipsTitle: "Consejos para maestros",\n    tipsText: "<ul><li><strong>Oraciones uniformes:</strong> El texto de IA suele tener longitudes de frases consistentes.</li><li><strong>Frases pulidas:</strong> Busca una prosa demasiado perfecta.</li><li><strong>Transiciones sobreutilizadas:</strong> Identifica frases como \'en conclusi√≥n\'.</li></ul>",\n    footer: "Creado para promover el trabajo honesto | <a href=\'mailto:your-email@example.com\'>Cont√°ctenos</a>",\n    noText: "Por favor, ingrese un texto para analizar.",\n    aiLabel: "Probabilidad de IA:",\n    likelyAI: "Probablemente generado por IA",\n    likelyHuman: "Probablemente escrito por humanos",\n    compareResult: "Comparaci√≥n: Texto 1 - {score1}%, Text 2 - {score2}%",\n    wordCount: "Conteo de palabras: {count}",\n    repeatWords: "Palabras repetidas: {list}",\n    sentenceCount: "Conteo de frases: {count}",\n    readability: "Legibilidad (Flesch): {score}",\n    darkMode: "Modo oscuro",\n    lightMode: "Modo claro"\n  },\n  UK: {\n    title: "–î–µ—Ç–µ–∫—Ç–æ—Ä –¥–æ–º–∞—à–Ω—ñ—Ö –∑–∞–≤–¥–∞–Ω—å –®–Ü",\n    subtitle: "–î–ª—è –≤—á–∏—Ç–µ–ª—ñ–≤, –±–∞—Ç—å–∫—ñ–≤ —Ç–∞ —á–µ—Å–Ω–∏—Ö —É—á–Ω—ñ–≤",\n    banner: "–õ–æ–≤—ñ—Ç—å —à–∞—Ö—Ä–∞—ó–≤ –®–Ü –∑–∞ —Å–µ–∫—É–Ω–¥–∏!",\n    prompt: "–í—Å—Ç–∞–≤—Ç–µ —Ç–µ–∫—Å—Ç —É—á–Ω—è –¥–ª—è –≤–∏—è–≤–ª–µ–Ω–Ω—è –≤–º—ñ—Å—Ç—É, –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ–≥–æ –®–Ü.",\n    placeholder: "–í—Å—Ç–∞–≤—Ç–µ —Ç–µ–∫—Å—Ç —Ç—É—Ç (–Ω–∞–ø—Ä. –¥–æ–º–∞—à–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è, –µ—Å–µ)...",\n    comparePlaceholder: "–í—Å—Ç–∞–≤—Ç–µ –¥—Ä—É–≥–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è...",\n    analyze: "–ê–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ç–µ–∫—Å—Ç",\n    compare: "–ü–æ—Ä—ñ–≤–Ω—è—Ç–∏ —Ç–µ–∫—Å—Ç–∏",\n    export: "–ï–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏",\n    share: "–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è: ùïè",\n    clear: "–û—á–∏—Å—Ç–∏—Ç–∏",\n    tipsTitle: "–ü–æ—Ä–∞–¥–∏ –¥–ª—è –≤—á–∏—Ç–µ–ª—ñ–≤",\n    tipsText: "<ul><li><strong>–û–¥–Ω–∞–∫–æ–≤—ñ —Ä–µ—á–µ–Ω–Ω—è:</strong> –¢–µ–∫—Å—Ç –®–Ü —á–∞—Å—Ç–æ –º–∞—î –ø–æ—Å—Ç—ñ–π–Ω—É –¥–æ–≤–∂–∏–Ω—É —Ä–µ—á–µ–Ω—å.</li><li><strong>–í—ñ–¥—à–ª—ñ—Ñ–æ–≤–∞–Ω—ñ —Ñ—Ä–∞–∑–∏:</strong> –®—É–∫–∞–π—Ç–µ –Ω–∞–¥—Ç–æ —ñ–¥–µ–∞–ª—å–Ω—É –ø—Ä–æ–∑—É.</li><li><strong>–ù–∞–¥–º—ñ—Ä–Ω—ñ –ø–µ—Ä–µ—Ö–æ–¥–∏:</strong> –ó–≤–µ—Ä—Ç–∞–π—Ç–µ —É–≤–∞–≥—É –Ω–∞ —Ñ—Ä–∞–∑–∏ —Ç–∏–ø—É \'–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è\'.</li></ul>",\n    footer: "–°—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ —á–µ—Å–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ | <a href=\'mailto:your-email@example.com\'>–ó–≤\'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏</a>",\n    noText: "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É.",\n    aiLabel: "–ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å –®–Ü:",\n    likelyAI: "–ô–º–æ–≤—ñ—Ä–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ –®–Ü",\n    likelyHuman: "–ô–º–æ–≤—ñ—Ä–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω–æ –ª—é–¥–∏–Ω–æ—é",\n    compareResult: "–ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è: –¢–µ–∫—Å—Ç 1 - {score1}%, –¢–µ–∫—Å—Ç 2 - {score2}%",\n    wordCount: "–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ª—ñ–≤: {count}",\n    repeatWords: "–ü–æ–≤—Ç–æ—Ä—é–≤–∞–Ω—ñ —Å–ª–æ–≤–∞: {list}",\n    sentenceCount: "–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ—á–µ–Ω—å: {count}",\n    readability: "–ß–∏—Ç–∞–±–µ–ª—å–Ω—ñ—Å—Ç—å (Flesch): {score}",\n    darkMode: "–¢–µ–º–Ω–∏–π —Ä–µ–∂–∏–º",\n    lightMode: "–°–≤—ñ—Ç–ª–∏–π —Ä–µ–∂–∏–º"\n  },\n  RU: {\n    title: "–î–µ—Ç–µ–∫—Ç–æ—Ä –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π –ò–ò",\n    subtitle: "–î–ª—è —É—á–∏—Ç–µ–ª–µ–π, —Ä–æ–¥–∏—Ç–µ–ª–µ–π –∏ —á–µ—Å—Ç–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤",\n    banner: "–õ–æ–≤–∏ –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤ —Å –ò–ò –∑–∞ —Å–µ–∫—É–Ω–¥—ã!",\n    prompt: "–í—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —É—á–µ–Ω–∏–∫–∞ –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞, —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ò–ò.",\n    placeholder: "–í—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∑–¥–µ—Å—å (–Ω–∞–ø—Ä. –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è, —ç—Å—Å–µ)...",\n    comparePlaceholder: "–í—Å—Ç–∞–≤—å—Ç–µ –≤—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è...",\n    analyze: "–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç",\n    compare: "–°—Ä–∞–≤–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç—ã",\n    export: "–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã",\n    share: "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è: ùïè",\n    clear: "–û—á–∏—Å—Ç–∏—Ç—å",\n    tipsTitle: "–°–æ–≤–µ—Ç—ã –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π",\n    tipsText: "<ul><li><strong>–û–¥–∏–Ω–∞–∫–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:</strong> –¢–µ–∫—Å—Ç –ò–ò —á–∞—Å—Ç–æ –∏–º–µ–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é –¥–ª–∏–Ω—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.</li><li><strong>–û—Ç—à–ª–∏—Ñ–æ–≤–∞–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã:</strong> –ò—â–∏—Ç–µ —Å–ª–∏—à–∫–æ–º –∏–¥–µ–∞–ª—å–Ω—É—é –ø—Ä–æ–∑—É.</li><li><strong>–ß—Ä–µ–∑–º–µ—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã:</strong> –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ñ—Ä–∞–∑—ã –≤—Ä–æ–¥–µ \'–≤ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ\'.</li></ul>",\n    footer: "–°–æ–∑–¥–∞–Ω–æ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —á–µ—Å—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã | <a href=\'mailto:your-email@example.com\'>–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏</a>",\n    noText: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.",\n    aiLabel: "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ò–ò:",\n    likelyAI: "–í–µ—Ä–æ—è—Ç–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –ò–ò",\n    likelyHuman: "–í–µ—Ä–æ—è—Ç–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω–æ —á–µ–ª–æ–≤–µ–∫–æ–º",\n    compareResult: "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ: –¢–µ–∫—Å—Ç 1 - {score1}%, –¢–µ–∫—Å—Ç 2 - {score2}%",\n    wordCount: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤: {count}",\n    repeatWords: "–ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–ª–æ–≤–∞: {list}",\n    sentenceCount: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {count}",\n    readability: "–ß–∏—Ç–∞–µ–º–æ—Å—Ç—å (Flesch): {score}",\n    darkMode: "–¢–µ–º–Ω—ã–π —Ä–µ–∂–∏–º",\n    lightMode: "–°–≤–µ—Ç–ª—ã–π —Ä–µ–∂–∏–º"\n  }\n};\nclass UIController {\n  constructor() {\n    this.currentLang = "ENG";\n    this.translations = {\n      ENG: {\n        title: "AI Text Detector",\n        subtitle: "Analyze text for AI-generated content",\n        banner: "Switch theme for better readability",\n        prompt: "Enter or paste text to analyze:",\n        placeholder: "Enter text here...",\n        comparePlaceholder: "Enter text to compare...",\n        analyze: "Analyze",\n        compare: "Compare",\n        export: "Export",\n        share: "Share",\n        clear: "Clear",\n        tipsTitle: "Writing Tips",\n        footer: "¬© 2024 AI Text Detector",\n        noText: "Please enter some text to analyze",\n        likelyAI: "Likely AI-generated",\n        likelyHuman: "Likely human-written",\n        aiLabel: "AI Probability:",\n        offline: "You are currently offline. Some features may be limited.",\n        online: "You are back online!"\n      }\n      // Add other languages as needed\n    };\n    this.init();\n  }\n  init() {\n    if (typeof document !== \'undefined\') {\n      document.addEventListener(\'DOMContentLoaded\', () => {\n        this.switchLang("ENG");\n        this.addThemeToggle();\n        this.loadThemePreference();\n        this.setupEventListeners();\n        this.addAccessibilityFeatures();\n      });\n    }\n  }\n  switchLang(lang) {\n    this.currentLang = lang;\n    const t = this.translations[lang];\n    if (typeof document === \'undefined\') return;\n\n    // Update page title and header\n    document.querySelector("h1").innerHTML = t.title;\n    document.querySelector("header p").innerHTML = t.subtitle;\n    document.querySelector(".theme-banner").innerHTML = t.banner;\n\n    // Update input section\n    document.querySelector(".input-section p").innerHTML = t.prompt;\n    document.getElementById("inputText").placeholder = t.placeholder;\n    document.getElementById("compareText").placeholder = t.comparePlaceholder;\n\n    // Update buttons\n    document.getElementById("analyzeBtn").innerHTML = t.analyze;\n    document.getElementById("compareBtn").innerHTML = t.compare;\n    document.getElementById("exportBtn").innerHTML = t.export;\n    document.getElementById("shareBtn").innerHTML = t.share;\n    document.getElementById("clearBtn").innerHTML = t.clear;\n\n    // Update sidebar\n    document.querySelector(".sidebar h3").innerHTML = t.tipsTitle;\n    this.updateTips(t);\n\n    // Update footer\n    document.querySelector("footer p").innerHTML = t.footer;\n\n    // Update theme toggle button\n    this.updateThemeToggleText();\n\n    // Re-run analysis if text exists\n    this.detectAI();\n\n    // Save language preference\n    if (typeof localStorage !== \'undefined\') {\n      localStorage.setItem(\'aiDetectorLang\', lang);\n    }\n  }\n  updateTips(translations) {\n    const tips = document.querySelectorAll(\'.tip\');\n    // Update tips with translations\n    // This is a placeholder - actual tips would come from translations\n  }\n  updateThemeToggleText() {\n    if (typeof document === \'undefined\') return;\n    const themeToggle = document.getElementById(\'themeToggle\');\n    const isDark = document.documentElement.classList.contains(\'dark-theme\');\n    themeToggle.textContent = isDark ? \'‚òÄÔ∏è\' : \'üåô\';\n    themeToggle.setAttribute(\'aria-label\', isDark ? \'Switch to light theme\' : \'Switch to dark theme\');\n  }\n  toggleTheme() {\n    if (typeof document === \'undefined\') return;\n    const isDarkMode = document.documentElement.classList.toggle(\'dark-theme\');\n    document.body.classList.toggle(\'dark-theme\');\n    this.updateThemeToggleText();\n\n    // Save preference\n    if (typeof localStorage !== \'undefined\') {\n      localStorage.setItem(\'aiDetectorTheme\', isDarkMode ? \'dark\' : \'light\');\n    }\n  }\n  detectAI() {\n    if (typeof document === \'undefined\') return;\n    const text = document.getElementById("inputText").value.trim();\n    if (!text) {\n      document.getElementById("result").innerHTML = this.translations[this.currentLang].noText;\n      document.getElementById("compareResult").innerHTML = "";\n      this.clearStats();\n      return;\n    }\n    try {\n      // Use the AIDetector module to analyze text\n      const detector = new window.AIDetector();\n      const analysis = detector.analyzeTextDetailed(text);\n      const resultText = analysis.aiScore > 50 ? this.translations[this.currentLang].likelyAI : this.translations[this.currentLang].likelyHuman;\n\n      // Display result\n      const resultElement = document.getElementById("result");\n      resultElement.innerHTML = `${this.translations[this.currentLang].aiLabel} ${analysis.aiScore}% - ${resultText}`;\n\n      // Update other UI elements\n      document.getElementById("compareResult").innerHTML = "";\n      this.updateStats(analysis);\n\n      // Log for debugging\n      if (window.AIDetectorDebug?.config.enabled) {\n        window.AIDetectorDebug.logger.info(`Analysis complete: Score ${analysis.aiScore}%`);\n      }\n    } catch (error) {\n      document.getElementById("result").innerHTML = "Error analyzing text: " + error.message;\n      if (window.AIDetectorDebug?.config.enabled) {\n        window.AIDetectorDebug.logger.error("Error in detectAI function:", error);\n      }\n    }\n  }\n  clearStats() {\n    const statsElements = document.querySelectorAll(\'.stat-value\');\n    statsElements.forEach(el => el.textContent = \'0\');\n\n    // Explicitly set word count to 0\n    document.getElementById(\'wordCount\').textContent = \'0\';\n  }\n  updateStats(analysis) {\n    // Update word count\n    document.getElementById(\'wordCount\').textContent = analysis.wordCount.toString();\n\n    // Update sentence count\n    document.getElementById(\'sentenceCount\').textContent = analysis.sentenceCount.toString();\n\n    // Update readability if available\n    if (analysis.metrics?.readabilityScore) {\n      document.getElementById(\'readability\').textContent = analysis.metrics.readabilityScore.toString();\n    }\n  }\n  setupEventListeners() {\n    if (typeof document === \'undefined\') return;\n\n    // Add event listeners for buttons\n    document.getElementById(\'analyzeBtn\').addEventListener(\'click\', () => this.detectAI());\n    document.getElementById(\'clearBtn\').addEventListener(\'click\', () => {\n      document.getElementById(\'inputText\').value = \'\';\n      document.getElementById(\'result\').innerHTML = \'\';\n      document.getElementById(\'compareResult\').innerHTML = \'\';\n      this.clearStats();\n    });\n\n    // Add theme toggle listener\n    document.getElementById(\'themeToggle\').addEventListener(\'click\', () => this.toggleTheme());\n\n    // Add language selector listener\n    document.getElementById(\'langSelect\').addEventListener(\'change\', e => this.switchLang(e.target.value));\n  }\n  addThemeToggle() {\n    if (typeof document === \'undefined\') return;\n    const themeToggle = document.getElementById(\'themeToggle\');\n    if (!themeToggle) return;\n    themeToggle.setAttribute(\'role\', \'button\');\n    themeToggle.setAttribute(\'aria-label\', \'Toggle theme\');\n    this.updateThemeToggleText();\n  }\n  loadThemePreference() {\n    if (typeof localStorage === \'undefined\' || typeof document === \'undefined\') return;\n    const savedTheme = localStorage.getItem(\'aiDetectorTheme\');\n    if (savedTheme === \'dark\') {\n      document.documentElement.classList.add(\'dark-theme\');\n      document.body.classList.add(\'dark-theme\');\n      this.updateThemeToggleText();\n    }\n  }\n  addAccessibilityFeatures() {\n    if (typeof document === \'undefined\') return;\n\n    // Add ARIA labels\n    document.getElementById(\'inputText\').setAttribute(\'aria-label\', \'Text to analyze\');\n    document.getElementById(\'analyzeBtn\').setAttribute(\'aria-label\', \'Analyze text\');\n    document.getElementById(\'clearBtn\').setAttribute(\'aria-label\', \'Clear text\');\n    document.getElementById(\'langSelect\').setAttribute(\'aria-label\', \'Select language\');\n  }\n  showOfflineMessage() {\n    if (typeof document === \'undefined\') return;\n    const offlineMessage = document.createElement(\'div\');\n    offlineMessage.className = \'offline-message\';\n    offlineMessage.textContent = this.translations[this.currentLang].offline;\n    document.body.appendChild(offlineMessage);\n  }\n  showOnlineMessage() {\n    if (typeof document === \'undefined\') return;\n    const onlineMessage = document.createElement(\'div\');\n    onlineMessage.className = \'online-message\';\n    onlineMessage.textContent = this.translations[this.currentLang].online;\n    document.body.appendChild(onlineMessage);\n\n    // Remove the message after 3 seconds\n    setTimeout(() => {\n      onlineMessage.remove();\n    }, 3000);\n  }\n}\n\n// Export for browser environments\nexports.UIController = UIController;\nif (typeof window !== \'undefined\') {\n  window.UIController = UIController;\n}\n\n/**\n * Update tips section with translated content\n * @param {Object} t - Translation object\n */\nfunction updateTips(t) {\n  document.querySelector(".tips-container").innerHTML = `\n    <div class="tip-item"><span class="icon"><i class="fas fa-check"></i></span><h4>${t.tipsText.match(/<li><strong>([^<]+)<\\/strong>/g)[0].replace(\'<li><strong>\', \'\').replace(\'</strong>\', \'\')}</h4><p>${t.tipsText.match(/<li><strong>[^<]+<\\/strong>: (.*?)<\\/li>/)[1]}</p></div>\n    <div class="tip-item"><span class="icon"><i class="fas fa-check"></i></span><h4>${t.tipsText.match(/<li><strong>([^<]+)<\\/strong>/g)[1].replace(\'<li><strong>\', \'\').replace(\'</strong>\', \'\')}</h4><p>${t.tipsText.match(/<li><strong>[^<]+<\\/strong>: (.*?)<\\/li>/)[2]}</p></div>\n    <div class="tip-item"><span class="icon"><i class="fas fa-check"></i></span><h4>${t.tipsText.match(/<li><strong>([^<]+)<\\/strong>/g)[2].replace(\'<li><strong>\', \'\').replace(\'</strong>\', \'\')}</h4><p>${t.tipsText.match(/<li><strong>[^<]+<\\/strong>: (.*?)<\\/li>/)[3]}</p></div>\n  `;\n}\n\n/**\n * Add theme toggle button to the page\n */\nfunction addThemeToggle() {\n  const themeToggle = document.createElement(\'button\');\n  themeToggle.id = \'themeToggle\';\n  themeToggle.className = \'theme-toggle\';\n  themeToggle.innerHTML = \'<i class="fas fa-moon"></i>\';\n  themeToggle.setAttribute(\'aria-label\', \'Toggle dark mode\');\n  document.body.appendChild(themeToggle);\n  themeToggle.addEventListener(\'click\', toggleTheme);\n}\n\n/**\n * Update theme toggle button text based on current theme\n */\nfunction updateThemeToggleText() {\n  const themeToggle = document.getElementById(\'themeToggle\');\n  if (!themeToggle) return;\n  const isDarkMode = document.documentElement.classList.contains(\'dark-theme\');\n  themeToggle.innerHTML = isDarkMode ? \'<i class="fas fa-sun"></i>\' : \'<i class="fas fa-moon"></i>\';\n  themeToggle.setAttribute(\'aria-label\', isDarkMode ? translations[currentLang].lightMode : translations[currentLang].darkMode);\n}\n\n/**\n * Load saved theme preference from localStorage\n */\nfunction loadThemePreference() {\n  const savedTheme = localStorage.getItem(\'aiDetectorTheme\');\n  const savedLang = localStorage.getItem(\'aiDetectorLang\');\n\n  // Apply saved theme if it exists\n  if (savedTheme === \'dark\') {\n    document.documentElement.classList.add(\'dark-theme\');\n    document.body.classList.add(\'dark-theme\');\n    updateThemeToggleText();\n  }\n\n  // Apply saved language if it exists\n  if (savedLang && translations[savedLang]) {\n    document.getElementById(\'langSelect\').value = savedLang;\n    switchLang(savedLang);\n  }\n}\n\n/**\n * Set up event listeners for UI interactions\n */\nfunction setupEventListeners() {\n  // Language selector\n  document.getElementById(\'langSelect\').addEventListener(\'change\', function () {\n    switchLang(this.value);\n  });\n\n  // Analyze button\n  document.getElementById(\'analyzeBtn\').addEventListener(\'click\', detectAI);\n\n  // Compare button\n  document.getElementById(\'compareBtn\').addEventListener(\'click\', compareTexts);\n\n  // Export button\n  document.getElementById(\'exportBtn\').addEventListener(\'click\', exportResults);\n\n  // Share button\n  document.getElementById(\'shareBtn\').addEventListener(\'click\', shareOnX);\n\n  // Clear button\n  document.getElementById(\'clearBtn\').addEventListener(\'click\', clearText);\n\n  // Educators button\n  document.getElementById(\'educatorsBtn\').addEventListener(\'click\', function () {\n    window.location.href = \'educators.html\';\n  });\n}\n\n/**\n * Add accessibility features to the page\n */\nfunction addAccessibilityFeatures() {\n  // Add skip to content link\n  const skipLink = document.createElement(\'a\');\n  skipLink.href = \'#inputText\';\n  skipLink.className = \'skip-link\';\n  skipLink.textContent = \'Skip to content\';\n  document.body.insertBefore(skipLink, document.body.firstChild);\n\n  // Add ARIA labels\n  document.getElementById(\'inputText\').setAttribute(\'aria-label\', \'Text to analyze\');\n  document.getElementById(\'compareText\').setAttribute(\'aria-label\', \'Second text to compare\');\n  document.getElementById(\'langSelect\').setAttribute(\'aria-label\', \'Select language\');\n}\n\n/**\n * Compare two texts for AI probability\n */\nfunction compareTexts() {\n  const text1 = document.getElementById("inputText").value.trim();\n  const text2 = document.getElementById("compareText").value.trim();\n  if (!text1 || !text2) {\n    document.getElementById("compareResult").innerHTML = translations[currentLang].noText;\n    return;\n  }\n  try {\n    // Use the AIDetector module to compare texts\n    const comparison = window.AIDetector.compareTexts(text1, text2);\n\n    // Display result immediately without animation for debugging\n    const compareResultElement = document.getElementById("compareResult");\n    compareResultElement.innerHTML = translations[currentLang].compareResult.replace("{score1}", comparison.text1Score).replace("{score2}", comparison.text2Score);\n\n    // Update stats\n    updateStats(text1);\n\n    // Log for debugging\n    if (window.AIDetectorDebug && window.AIDetectorDebug.config.enabled) {\n      window.AIDetectorDebug.logger.info(`Comparison complete: Text1 ${comparison.text1Score}%, Text2 ${comparison.text2Score}%`);\n    }\n  } catch (error) {\n    // Handle errors\n    document.getElementById("compareResult").innerHTML = "Error comparing texts: " + error.message;\n    if (window.AIDetectorDebug && window.AIDetectorDebug.config.enabled) {\n      window.AIDetectorDebug.logger.error("Error in compareTexts function:", error);\n    }\n  }\n}\n\n/**\n * Export analysis results\n */\nfunction exportResults() {\n  const text1 = document.getElementById("inputText").value.trim();\n  const text2 = document.getElementById("compareText").value.trim();\n  let content = "";\n  if (text1) {\n    const score1 = window.AIDetector.analyzeText(text1);\n    content += `${translations[currentLang].aiLabel} Text 1: ${score1}%\\n`;\n\n    // Add text statistics\n    const words = text1.split(/\\s+/).filter(w => w.length > 0);\n    const sentences = text1.split(/[.!?]+/).filter(s => s.trim().length > 0);\n    content += `${translations[currentLang].wordCount.replace("{count}", words.length)}\\n`;\n    content += `${translations[currentLang].sentenceCount.replace("{count}", sentences.length)}\\n`;\n\n    // Add readability\n    const readabilityScore = window.AIDetector.calculateReadability(text1);\n    content += `${translations[currentLang].readability.replace("{score}", readabilityScore)}\\n\\n`;\n  }\n  if (text2) {\n    const score2 = window.AIDetector.analyzeText(text2);\n    content += `${translations[currentLang].aiLabel} Text 2: ${score2}%\\n`;\n\n    // Add text statistics\n    const words = text2.split(/\\s+/).filter(w => w.length > 0);\n    const sentences = text2.split(/[.!?]+/).filter(s => s.trim().length > 0);\n    content += `${translations[currentLang].wordCount.replace("{count}", words.length)}\\n`;\n    content += `${translations[currentLang].sentenceCount.replace("{count}", sentences.length)}\\n`;\n\n    // Add readability\n    const readabilityScore = window.AIDetector.calculateReadability(text2);\n    content += `${translations[currentLang].readability.replace("{score}", readabilityScore)}\\n`;\n  }\n  if (!content) {\n    alert(translations[currentLang].noText);\n    return;\n  }\n\n  // Create and download file\n  const blob = new Blob([content], {\n    type: "text/plain"\n  });\n  const link = document.createElement("a");\n  link.href = URL.createObjectURL(blob);\n  link.download = "ai_detector_results.txt";\n  link.click();\n}\n\n/**\n * Share on Twitter/X\n */\nfunction shareOnX() {\n  const url = "https://aeell.github.io/ai-text-detector/";\n  const text = encodeURIComponent(`Check out this free AI Homework Detector with word counter and more! ${url} #Education #AI`);\n  window.open(`https://twitter.com/intent/tweet?text=${text}`, "_blank");\n}\n\n/**\n * Clear all text inputs and results\n */\nfunction clearText() {\n  document.getElementById("inputText").value = "";\n  document.getElementById("compareText").value = "";\n  document.getElementById("result").innerHTML = "";\n  document.getElementById("compareResult").innerHTML = "";\n  clearStats();\n}\n\n/**\n * Update text statistics display\n * @param {string} text - Text to analyze\n */\nfunction updateStats(text) {\n  const words = text.split(/\\s+/).filter(w => w.length > 0);\n  const sentences = text.split(/[.!?]+/).filter(s => s.trim().length > 0);\n  const wordCount = words.length;\n  const sentenceCount = sentences.length;\n\n  // Word Count\n  document.getElementById("wordCount").innerHTML = translations[currentLang].wordCount.replace("{count}", wordCount);\n\n  // Repeating Words\n  const repeatingWords = window.AIDetector.findRepeatingWords(text, 3);\n  const repeats = repeatingWords.map(_ref => {\n    let [word, count] = _ref;\n    return `${word} (${count})`;\n  }).join(", ");\n  document.getElementById("repeatWords").innerHTML = translations[currentLang].repeatWords.replace("{list}", repeats || "None");\n\n  // Sentence Count\n  document.getElementById("sentenceCount").innerHTML = translations[currentLang].sentenceCount.replace("{count}", sentenceCount);\n\n  // Readability (Flesch Reading Ease)\n  const fleschScore = window.AIDetector.calculateReadability(text);\n  document.getElementById("readability").innerHTML = translations[currentLang].readability.replace("{score}", fleschScore);\n}\n\n/**\n * Clear statistics display\n */\nfunction clearStats() {\n  document.getElementById("wordCount").innerHTML = "";\n  document.getElementById("repeatWords").innerHTML = "";\n  document.getElementById("sentenceCount").innerHTML = "";\n  document.getElementById("readability").innerHTML = "";\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///42\n')}}]);